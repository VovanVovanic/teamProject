{"version":3,"sources":["redux/reducers/profile.ts","api/api.ts","components/testComponents/c1-SuperInputText/SuperInputText.tsx","components/preloader/spinner.tsx","components/message/message.tsx","components/testComponents/c2-SuperButton/SuperButton.tsx","components/testComponents/c3-SuperCheckbox/SuperCheckbox.tsx","components/login/login.tsx","redux/reducers/password.ts","components/newPass/newPass.tsx","components/passRecower/recover.tsx","components/profile/profile.tsx","redux/types.ts","redux/actions/register.ts","components/register/register.tsx","components/testComponents/c4-SuperEditableSpan/SuperEditableSpan.tsx","components/testComponents/c5-SuperSelect/SuperSelect.tsx","components/testComponents/c6-SuperRadio/SuperRadio.tsx","components/testComponents/c7-SuperRange/SuperRange.tsx","components/testComponents/c8-SuperDoubleRange/SuperDoubleRange.tsx","components/testComponents/testComponents.tsx","components/error/error.tsx","components/navigation/nav.tsx","App.tsx","reportWebVitals.ts","redux/reducers/register.ts","redux/store.ts","index.tsx","components/login/login.module.scss","components/testComponents/c1-SuperInputText/SuperInputText.module.css","components/testComponents/c3-SuperCheckbox/SuperCheckbox.module.css","components/passRecower/passRecover.module.scss","components/register/register.module.scss","components/testComponents/c5-SuperSelect/select.module.css","components/message/message.module.scss","components/testComponents/c2-SuperButton/SuperButton.module.css","components/newPass/newPass.module.scss","components/navigation/nav.module.scss","components/profile/profile.module.scss","components/testComponents/c4-SuperEditableSpan/span.module.css","components/testComponents/c6-SuperRadio/radio.module.css","components/testComponents/c7-SuperRange/SuperRange.module.css","components/testComponents/testComponents.module.scss","components/error/error.module.scss"],"names":["ACTION_TYPES","instance","axios","create","baseURL","withCredentials","API","data","post","then","response","payload","email","from","message","password","resetPasswordToken","delete","name","avatar","put","initState","user","publicCardPacksCount","verified","rememberMe","isAuthSuccess","error","loading","setUserDataAC","isAuth","type","SET_USER_DATA","setUserLoadingAC","SET_USER_LOADING","setErrorMessageAC","SET_ERROR_MESSAGE","Input","onChange","onChangeText","onKeyPress","onEnter","spanClassName","className","touched","restProps","finalSpanClassName","s","finalInputClassName","errorInput","e","currentTarget","value","key","superInput","Preloader","Message","cls","classes","push","join","SuperButton","color","onClick","Btn","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","Login","dispatch","useDispatch","errorLogin","useSelector","state","profile","isLoaded","history","useHistory","setTimeout","formik","useFormik","initialValues","onSubmit","values","a","res","newData","console","log","validate","errors","test","length","handleSubmit","Loginform","placeholder","getFieldProps","onBlur","handleBlur","BtnWrapper","disabled","isMessageSend","isNewPasswordSet","isFetching","isError","setMessageSendAC","setIsFetchingAC","setErrorAC","NewPass","token","useParams","setNewPassword","to","SuperInputText","id","style","PassRecover","React","memo","useState","timeForNextTry","setTimeForNextTry","useEffect","clearTimeout","onFocus","Profile","isAuthorised","Object","map","REGISTER_NEW_USER","GET_REGISTRATION_ERROR","SET_LOADING","onRegister","onError","Register","registerStatuses","register","redirectToLogin","getState","addedUser","errorMsg","resetForm","registerForm","Btns","SuperEditableSpan","autoFocus","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","Span","SuperSelect","options","onChangeOption","mappedOptions","el","i","SelectBox","htmlFor","SelectLabel","Select","SuperRadio","onChangeCallback","o","RadioLabel","display","width","justifyContent","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","makeStyles","root","padding","useStyles","Slider","event","newValue","valueLabelDisplay","aria-labelledby","arr","radioArr","TestComponents","setValue","val","radioOpt","setRadioOpt","value1","setValue1","value2","setValue2","undefined","checkedRadio","val1","val2","Error","Nav","routeList","RouteLink","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e361f265.chunk.js","sourcesContent":["import {Dispatch} from \"redux\";\r\nimport {API} from \"../../api/api\";\r\n\r\n//types constants\r\nenum ACTION_TYPES {\r\n    SET_USER_DATA = \"SET_USER_DATA\",\r\n    SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE',\r\n    SET_USER_LOADING = 'SET_USER_LOADING'\r\n}\r\n\r\n//Common types\r\nexport type LoginDataType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n}\r\n\r\ntype ProfileStateType = {\r\n    user: User,\r\n    isAuthSuccess: boolean,\r\n    error: string,\r\n    loading: boolean\r\n}\r\n\r\nexport type User = {\r\n    email: string,\r\n    name: string,\r\n    avatar: string | undefined,\r\n    publicCardPacksCount: number | null,\r\n    verified: boolean,\r\n    rememberMe: boolean,\r\n    message: string\r\n}\r\n\r\n//Action Creators Type\r\ntype SetUserDataActionType = {\r\n    type: ACTION_TYPES.SET_USER_DATA,\r\n    user: User,\r\n    isAuth:boolean\r\n}\r\n\r\ntype SetErrorMessage = {\r\n    type: ACTION_TYPES.SET_ERROR_MESSAGE,\r\n    error: string\r\n}\r\n\r\ntype SetUserLoading = {\r\n    type: ACTION_TYPES.SET_USER_LOADING\r\n    loading: boolean\r\n}\r\ntype AllActionsTypes = SetUserDataActionType | SetErrorMessage | SetUserLoading\r\n\r\n//Reducer\r\nconst initState = {\r\n    user: {\r\n        email: '',\r\n        name: '',\r\n        avatar: '',\r\n        publicCardPacksCount: null,\r\n        verified: false,\r\n        rememberMe: false,\r\n        message: ''\r\n    },\r\n    isAuthSuccess: false,\r\n    error: '',\r\n    loading: false\r\n}\r\n\r\nexport const profileReducer = (state: ProfileStateType = initState, action: AllActionsTypes): ProfileStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n                isAuthSuccess: action.isAuth,\r\n                error: ''\r\n            }\r\n        case ACTION_TYPES.SET_ERROR_MESSAGE:\r\n            return  {\r\n                ...state,\r\n                isAuthSuccess: false,\r\n                error: action.error,\r\n            }\r\n        case ACTION_TYPES.SET_USER_LOADING:\r\n            return {\r\n                ...state, loading:action.loading\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//ActionCreators\r\nconst setUserDataAC = (user: User, isAuth:boolean) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_USER_DATA,\r\n        user,\r\n        isAuth\r\n    }\r\n}\r\nconst setUserLoadingAC = (loading: boolean) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_USER_LOADING,\r\n        loading\r\n    }\r\n}\r\nconst setErrorMessageAC = (error: string) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_ERROR_MESSAGE,\r\n        error\r\n    }\r\n}\r\n\r\n//ThunkCreators\r\nexport const setUserDateTC = (payload: LoginDataType) => async (dispatch: Dispatch) => {\r\n    dispatch(setUserLoadingAC(true))\r\n    try {\r\n        const res = await API.login(payload)\r\n        const {\r\n            avatar,\r\n            email,\r\n            name,\r\n            publicCardPacksCount,\r\n            rememberMe,\r\n            verified,\r\n        } = res\r\n\r\n        const user = {\r\n            avatar,\r\n            email,\r\n            name,\r\n            publicCardPacksCount,\r\n            rememberMe,\r\n            verified,\r\n            message: `${email} successfully logged`\r\n        }\r\n        dispatch(setUserDataAC(user, true))\r\n        if (!avatar || !name){\r\n            try {\r\n            const newData = await API.updateUser('User', 'some url')\r\n             console.log(newData);\r\n                \r\n            }\r\n            catch (e) {\r\n                \r\n            }\r\n        }\r\n\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : `${e.message} more details in the console`\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorMessageAC(error))\r\n    }\r\n    dispatch(setUserLoadingAC(false))\r\n}\r\n\r\nexport const deleteUserTC = () => async (dispatch: Dispatch) => {\r\n    dispatch(setUserLoadingAC(true))\r\n    try {\r\n        await API.logout()\r\n        dispatch(setUserDataAC({\r\n        email: '',\r\n        name: '',\r\n        avatar: '',\r\n        publicCardPacksCount: null,\r\n        verified: false,\r\n        rememberMe: false,\r\n        message: ''}, false))\r\n    }\r\n    catch (e) {\r\n    dispatch(setErrorMessageAC('Something gonna wrong'))\r\n    }\r\n    dispatch(setUserLoadingAC(false))\r\n}\r\n\r\nexport const isUserAuth = () => async (dispatch: Dispatch) => {\r\n    dispatch(setUserLoadingAC(true))\r\n    try {\r\n        const data = await API.isAuth()\r\n        const {avatar,email,name,publicCardPacksCount,rememberMe,verified} = data\r\n\r\n        const user = {\r\n            avatar,\r\n            email,\r\n            name,\r\n            publicCardPacksCount,\r\n            rememberMe,\r\n            verified,\r\n            message: `${email} successfully logged`\r\n        }\r\n        dispatch(setUserDataAC(user, true))\r\n        \r\n    }\r\n    catch (e) {\r\n        const error = {...e };\r\n         dispatch(setErrorMessageAC(error.response.data.error))\r\n        \r\n        \r\n    }\r\n    dispatch(setUserLoadingAC(false))\r\n}","import axios from \"axios\";\r\nimport { LoginDataType } from \"../redux/reducers/profile\";\r\n//  `https://neko-back.herokuapp.com/2.0`\r\n\r\ntype LoginResponseType = {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  avatar?: string;\r\n  publicCardPacksCount: number; // количество колод\r\n  created: Date;\r\n  updated: Date;\r\n  isAdmin: boolean;\r\n  verified: boolean; // подтвердил ли почту\r\n  rememberMe: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst messageForRecoveryPassword =\r\n  `<div>\r\n       To recover your password, follow the link:\r\n        <br/> \r\n          <a href='http://localhost:3000/teamProject#/NewPass/$token$'>\r\n            http://localhost:3000/teamProject#/NewPass/$token$\r\n           </a>\r\n     </div>`\r\n\r\n\r\nlet instance = axios.create({\r\n  // baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n  baseURL: `http://localhost:7542/2.0/`,\r\n  withCredentials: true,\r\n})\r\n\r\n// const herokuInstance = axios.create({\r\n//   baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n//   withCredentials: true\r\n// })\r\n\r\nexport type userRegType = {\r\n  email: string\r\n  password: string\r\n}\r\nexport const API = {\r\n  getResponse() {\r\n    const date = Date.now().toString()\r\n    return instance.get(`ping?frontTime=${date}`).then(response => response.data)\r\n  },\r\n  register(data: userRegType) {\r\n    return instance.post('auth/register/', data).then(response => response.data)\r\n  },\r\n  login(payload: LoginDataType) {\r\n    return instance.post(`auth/login/`, payload).then(response => response.data)\r\n  },\r\n  forgotPassword(email: string) {\r\n    return instance.post('auth/forgot', {\r\n      email,\r\n      from: 'Microsoft<pharm.sale777@gmail.com>',\r\n      message: messageForRecoveryPassword\r\n    })\r\n  },\r\n  setNewPassword(password: string, resetPasswordToken: string) {\r\n    return instance.post<{ info: string }>('auth/set-new-password', { password, resetPasswordToken })\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/me/`,{}).then(response=>response.data)\r\n  },\r\n  isAuth() {\r\n    return instance.post(`auth/me/`, {}).then(response=>response.data)\r\n  },\r\n  updateUser(name: string, avatar: string) {\r\n    return instance.put(`auth/me/`, {name, avatar}).then((response)=>response.data)\r\n  }\r\n}\r\n\r\n// export const passwordAPI = {\r\n//   forgot(email: string) {\r\n//     return herokuInstance.post('auth/forgot', {\r\n//       email,\r\n//       from: 'Mars<pharm.sale777@gmail.com>',\r\n//       message: messageForRecoveryPassword\r\n//     })\r\n//   },\r\n//   setNewPassword(password: string, resetPasswordToken: string) {\r\n//     return herokuInstance.post<{ info: string }>('auth/set-new-password', {password, resetPasswordToken})\r\n//   }\r\n// }\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype InputPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    touched?: boolean\r\n};\r\n\r\nconst Input: React.FC<InputPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        touched,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); \r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        e.key === \"Enter\"\r\n        && onEnter && onEnter(); \r\n    }\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = error && touched ? s.errorInput : '' \r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={`${s.superInput} ${finalInputClassName}`}\r\n                {...restProps} \r\n            />\r\n            {error && touched && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"lds-css\">\r\n            <div className=\"lds-double-ring\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React from 'react'\r\nimport classes from './message.module.scss'\r\n\r\nconst Message: React.FC<{ message: string; type?: string }> = ({\r\n  message,\r\n  type,\r\n}) => {\r\n  const cls = [classes.Message];\r\n  type && cls.push(classes[type]);\r\n  return <div className={cls.join(\" \")}>{message}</div>;\r\n};\r\nexport default Message","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport classes from \"./SuperButton.module.css\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    color?: string\r\n    type?: string\r\n    onClick?:  ()=>void\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = ({ color, className, type, onClick,  ...restProps }) => {\r\n\r\n    const cls = [\r\n        classes.Btn\r\n    ]\r\n    color && cls.push(classes[color])\r\n\r\n    return (\r\n        <button\r\n            onClick = {onClick}\r\n            className={cls.join(' ')}\r\n            {...restProps} \r\n        /> \r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n  onChangeChecked?: (checked: boolean) => void;\n  spanClassName?: string;\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (onChangeChecked) {\n          onChangeChecked(e.currentTarget.checked);\n        }\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n      \n        <label className={s.label}>\n          <input\n            type={\"checkbox\"}\n            onChange={onChangeCallback}\n            className={finalInputClassName}\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n          />\n          {children && <span className={s.spanClassName}>{children}</span>}\n        </label>\n      // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React from \"react\";\r\nimport classes from \"./login.module.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport { setUserDateTC } from \"../../redux/reducers/profile\";\r\nimport { RootStateType } from \"../../redux/store\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport Input from \"../testComponents/c1-SuperInputText/SuperInputText\";\r\nimport Preloader from \"../preloader/spinner\";\r\nimport Message from \"../message/message\";\r\nimport SuperButton from \"../testComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../testComponents/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\ntype FormikErrorsType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //here get error response from redux\r\n    const errorLogin = useSelector<RootStateType, string>(state => state.profile.error)\r\n    const isLoaded = useSelector<RootStateType, boolean>(state => state.profile.loading)\r\n    const message = useSelector<RootStateType, string>(state => state.profile.user.message)\r\n    const isAuthSuccess = useSelector<RootStateType, boolean>(state => state.profile.isAuthSuccess)\r\n\r\n    const history = useHistory();\r\n\r\n    const redirectToProfile = () => {\r\n        history.push(`/`);\r\n    };\r\n    const redirectToRegistration = () => {\r\n        history.push(`/register`);\r\n    };\r\n\r\n    isAuthSuccess && (() => {\r\n        setTimeout(() => {\r\n            redirectToProfile()\r\n        }, 3000)\r\n    })()\r\n\r\n    let type = ''\r\n    if (message) { type = 'success' }\r\n    if (errorLogin) { type = 'error' }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(setUserDateTC(values));\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorsType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Must be 8 characters or more';\r\n            }\r\n            return errors;\r\n        }\r\n    })\r\n\r\n    // if (isAuthSuccess) {\r\n    //     return <Redirect to=\"/profile\" />\r\n    // }\r\n\r\n    return (\r\n        <div className={classes.Login}>\r\n            <h2>Login</h2>\r\n            <form onSubmit={formik.handleSubmit} className={classes.Loginform}>\r\n                {isLoaded ? (\r\n                    <Preloader />\r\n                ) : (\r\n                        <>\r\n                            <Input\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                error={formik.errors.email}\r\n                                touched={formik.touched.email}\r\n                                {...formik.getFieldProps(\"email\")}\r\n                                onBlur={formik.handleBlur}\r\n                            />\r\n                            <Input\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                error={formik.errors.password}\r\n                                {...formik.getFieldProps(\"password\")}\r\n                                touched={formik.touched.password}\r\n                                onBlur={formik.handleBlur}\r\n                            />\r\n                        </>\r\n                    )}\r\n                <Message message={errorLogin || message} type={type} />\r\n                <div className={classes.BtnWrapper}>\r\n                    <SuperCheckbox\r\n                        type=\"checkbox\"\r\n                        {...formik.getFieldProps(\"rememberMe\")}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <span>Remember me</span>\r\n                    <SuperButton\r\n                        type={\"submit\"}\r\n                        onClick={() => formik.handleSubmit()}\r\n                        disabled={isLoaded}\r\n                    >\r\n                        Login\r\n            </SuperButton>\r\n                    <SuperButton onClick={redirectToRegistration} color=\"blue\">\r\n                        Register\r\n            </SuperButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\nexport default Login;\r\n","import {ThunkAction} from 'redux-thunk'\r\nimport {RootStateType} from '../store';\r\nimport {API} from \"../../api/api\";\r\n\r\nconst initState = {\r\n    isMessageSend: false as boolean,\r\n    isNewPasswordSet: false as boolean,\r\n    isFetching: false as boolean,\r\n    isError: null as string | null\r\n}\r\n\r\nexport const passwordReducer = (state: PasswordStateType = initState, action: PasswordActionsType): PasswordStateType => {\r\n    switch (action.type) {\r\n        case 'PASSWORD/SET-MESSAGE-SEND':\r\n            return {...state,isMessageSend: action.isMessageSend}\r\n        case 'PASSWORD/SET-NEW-PASSWORD':\r\n            return {...state,isNewPasswordSet: true}\r\n        case 'PASSWORD/SET-IS-FETCHING':\r\n            return {...state,isFetching: action.isFetching}\r\n        case 'PASSWORD/SET-IS-ERROR':\r\n            return {...state,isError: action.isError}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//ActionCreators\r\nexport const setMessageSendAC = (isMessageSend: boolean) =>\r\n    ({type: 'PASSWORD/SET-MESSAGE-SEND', isMessageSend} as const)\r\nconst setNewPasswordAC = () => ({type: 'PASSWORD/SET-NEW-PASSWORD'} as const)\r\nconst setIsFetchingAC = (isFetching: boolean) => ({type: 'PASSWORD/SET-IS-FETCHING', isFetching} as const)\r\nexport const setErrorAC = (isError: string | null) => ({type: 'PASSWORD/SET-IS-ERROR', isError} as const)\r\n\r\n//ThunkCreators\r\nexport const sendMessageToUser = (email: string): ThunkType => async (dispatch) => {\r\n    dispatch(setIsFetchingAC(true))\r\n    try {\r\n        await API.forgotPassword(email)\r\n        dispatch(setMessageSendAC(true))\r\n        dispatch(setErrorAC(null))\r\n    } catch (err) {\r\n        if (err.response.data.error) {\r\n            dispatch(setErrorAC(err.response.data.error))\r\n        } else {\r\n            dispatch(setErrorAC('Some Error occurred. Please try again'))\r\n            console.log('Error:', {...err})\r\n        }\r\n    } finally {\r\n        dispatch(setIsFetchingAC(false))\r\n    }\r\n}\r\n\r\nexport const setNewPassword = (password: string, token: string): ThunkType => async (dispatch) => {\r\n    dispatch(setIsFetchingAC(true))\r\n    try {\r\n        await API.setNewPassword(password, token)\r\n        dispatch(setNewPasswordAC())\r\n        dispatch(setErrorAC(null))\r\n    } catch (err) {\r\n        if (err.response.data.error) {\r\n            dispatch(setErrorAC(err.response.data.error))\r\n        } else {\r\n            dispatch(setErrorAC('Some Error occurred. Please try again'))\r\n            console.log('Error:', {...err})\r\n        }\r\n    } finally {\r\n        dispatch(setIsFetchingAC(false))\r\n    }\r\n}\r\n\r\n//Types\r\ntype PasswordStateType = typeof initState\r\ntype PasswordActionsType =\r\n    ReturnType<typeof setMessageSendAC> |\r\n    ReturnType<typeof setNewPasswordAC> |\r\n    ReturnType<typeof setIsFetchingAC> |\r\n    ReturnType<typeof setErrorAC>\r\ntype ThunkType = ThunkAction<void, RootStateType, unknown, PasswordActionsType>\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './newPass.module.scss';\r\nimport {useFormik} from 'formik';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {setNewPassword} from '../../redux/reducers/password';\r\nimport {RootStateType} from '../../redux/store';\r\nimport Preloader from '../preloader/spinner';\r\nimport SuperInputText from '../testComponents/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../testComponents/c2-SuperButton/SuperButton';\r\n\r\nconst NewPass: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const isFetching = useSelector<RootStateType, boolean>(state => state.password.isFetching)\r\n    const isError = useSelector<RootStateType, string | null>(state => state.password.isError)\r\n    const isNewPasswordSet = useSelector<RootStateType, boolean>(state => state.password.isNewPasswordSet)\r\n    const {token} = useParams<ParamTypes>()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: '',\r\n        },\r\n        validate: (values: FormikErrorType) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Must be 8 characters or more';\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(setNewPassword(values.password, token))\r\n        },\r\n    });\r\n\r\n    // if success password changed\r\n    if (isNewPasswordSet) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    //Preloader\r\n    if (isFetching) {\r\n        return <div className={classes.NewPass}><Preloader/></div>\r\n    }\r\n    return <div className={classes.NewPass}>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div>\r\n                <SuperInputText\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    placeholder={'New Password'}\r\n                    {...formik.getFieldProps('password')}\r\n                />\r\n            </div>\r\n            {formik.touched.password && formik.errors.password ? (\r\n                <div style={{color: 'red'}}>{formik.errors.password}</div>\r\n            ) : null}\r\n            <SuperButton type=\"submit\">Set New Password</SuperButton>\r\n            {isError ? <div style={{color: 'red'}}>{isError}</div> : <></>}\r\n        </form>\r\n    </div>;\r\n};\r\nexport default NewPass;\r\n\r\n//Types\r\ntype FormikErrorType = {\r\n    password?: string\r\n}\r\ntype ParamTypes = {\r\n    token: string\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport classes from './passRecover.module.scss'\r\nimport {useFormik} from 'formik';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {sendMessageToUser, setErrorAC, setMessageSendAC} from '../../redux/reducers/password';\r\nimport {RootStateType} from '../../redux/store';\r\nimport Preloader from '../preloader/spinner';\r\nimport SuperInputText from '../testComponents/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../testComponents/c2-SuperButton/SuperButton';\r\n\r\nconst PassRecover: React.FC = React.memo(() => {\r\n    const dispatch = useDispatch();\r\n    const isMessageSend = useSelector<RootStateType, boolean>(state => state.password.isMessageSend)\r\n    const isError = useSelector<RootStateType, string | null>(state => state.password.isError)\r\n    const isFetching = useSelector<RootStateType, boolean>(state => state.password.isFetching)\r\n    const [timeForNextTry, setTimeForNextTry] = useState<number>(60)\r\n\r\n    //for timer after send message, for try again\r\n    useEffect(() => {\r\n        if (isMessageSend) {\r\n            const id = setTimeout(() => {\r\n                setTimeForNextTry(timeForNextTry - 1)\r\n            }, 1000)\r\n            if (timeForNextTry === 0) {\r\n                setTimeForNextTry(60)\r\n                clearTimeout(id)\r\n                dispatch(setMessageSendAC(false))\r\n            }\r\n            return () => {\r\n                clearTimeout(id)\r\n            }\r\n        } else {\r\n            return\r\n        }\r\n    }, [timeForNextTry, isMessageSend, dispatch, isFetching])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n        validate: (values: FormikErrorType) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(sendMessageToUser(values.email))\r\n        },\r\n    });\r\n\r\n    //cancel error, if server send good request after bad\r\n    const cancelError = () => {\r\n        if (isError) {\r\n            dispatch(setErrorAC(null))\r\n        }\r\n    }\r\n    //preloader\r\n    if (isFetching) {\r\n        return <div className={classes.PassRecover}><Preloader/></div>\r\n    }\r\n    //next try send message\r\n    if (isMessageSend) {\r\n        return (\r\n            <div className={classes.PassRecover}>\r\n                <span>Email sent, check your email </span>\r\n                <br/>\r\n                <span>You can try again after: {timeForNextTry}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.PassRecover}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                RECOVER\r\n                <div>\r\n                    <SuperInputText\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        placeholder={'Email'}\r\n                        onFocus={cancelError}\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                </div>\r\n                {formik.touched.email && formik.errors.email ? (\r\n                    <div style={{color: 'red'}}>{formik.errors.email}</div>\r\n                ) : null}\r\n                <SuperButton type=\"submit\">Send Email</SuperButton>\r\n                {isError ? <div style={{color: 'red'}}>{isError}</div> : <></>}\r\n            </form>\r\n        </div>\r\n    )\r\n})\r\nexport default PassRecover\r\n\r\n//Types\r\ntype FormikErrorType = {\r\n    email?: string\r\n}","import React, { useEffect } from \"react\";\r\nimport classes from \"./profile.module.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/store\";\r\nimport {deleteUserTC, isUserAuth, User} from \"../../redux/reducers/profile\";\r\nimport SuperButton from \"../testComponents/c2-SuperButton/SuperButton\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Preloader from \"../preloader/spinner\";\r\n\r\nconst Profile = () => {\r\n\r\nlet isLoaded = useSelector<RootStateType, boolean>((state)=>state.profile.loading)\r\nconst dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const isAuthorised = useSelector<RootStateType, boolean>((state)=>state.profile.isAuthSuccess)\r\n  \r\n  useEffect(() => {\r\n    dispatch(isUserAuth());\r\n    !isAuthorised && history.push(\"/login\");\r\n  },[])\r\n  const logoutHandler = () => {\r\n    dispatch(deleteUserTC());\r\n    history.push('/login')\r\n  }\r\n  const user = useSelector<RootStateType, User>(state => state.profile.user)\r\n\r\n  return <div className={classes.Profile}>\r\n    {isLoaded ? <Preloader /> : Object.values(user).map(e => <div>{e}</div>)}\r\n    <SuperButton onClick={logoutHandler}>Logout</SuperButton>\r\n  </div>;\r\n};\r\nexport default Profile;\r\n","export const CHANGE = 'CHANGE'\r\nexport const REGISTER_NEW_USER = 'REGISTER_NEW_USER'\r\nexport const GET_REGISTRATION_ERROR = 'GET_REGISTRATION_ERROR'\r\nexport const SET_LOADING = 'SET_LOADING'","import { RootStateType } from './../store';\r\nimport { API, userRegType } from \"../../api/api\"\r\nimport { GET_REGISTRATION_ERROR, REGISTER_NEW_USER, SET_LOADING } from \"../types\"\r\nimport { Dispatch } from \"redux\"\r\nexport type RegisterType = ReturnType<typeof onRegister> | ReturnType<typeof onError> | ReturnType<typeof onLoading>\r\n\r\nexport const onRegister = (user: string) => {\r\n  return {\r\n    type: REGISTER_NEW_USER,\r\n    user\r\n  }as const \r\n}\r\nexport const onError = (error: string) => {\r\n  return {\r\n    type: GET_REGISTRATION_ERROR,\r\n    error\r\n  }as const \r\n}\r\n\r\nexport const onLoading = () => {\r\n  return{type:SET_LOADING} as const\r\n}\r\n\r\nexport const makeRegistration = (data: userRegType) => async (dispatch: Dispatch, getState: RootStateType) => {\r\n  try {\r\n    dispatch(onLoading())\r\n    const user = await API.register(data)\r\n\r\n    dispatch(onRegister(`${user.addedUser.name} successfully registered`))\r\n  }\r\n  catch(e) {\r\n    const errors = { ...e }\r\n    let errorMsg = errors.response.data.error\r\n    dispatch(onError(errorMsg))\r\n  }\r\n}","import { useFormik } from \"formik\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {userRegType} from \"../../api/api\";\r\nimport { makeRegistration, onError } from \"../../redux/actions/register\";\r\nimport { RegisterStateType } from \"../../redux/reducers/register\";\r\nimport { RootStateType } from \"../../redux/store\";\r\nimport Message from \"../message/message\";\r\nimport Preloader from \"../preloader/spinner\";\r\nimport Input from \"../testComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../testComponents/c2-SuperButton/SuperButton\";\r\nimport classes from \"./register.module.scss\";\r\n\r\ntype FormikErrorType = {\r\n   email?: string\r\n   password?: string\r\n}\r\n\r\n\r\nconst Register = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const registerStatuses = useSelector<RootStateType, RegisterStateType>((state) => state.register);\r\n\r\n\r\n\r\n  let type = ''\r\n  if(registerStatuses.user){type = 'success'}\r\n  if (registerStatuses.error) { type = 'error' }\r\n  \r\n  const  redirectToLogin = () => {\r\n    history.push(`/login`);\r\n  };\r\n  \r\n  registerStatuses.user && (()=> {\r\n    setTimeout(() => {\r\n      redirectToLogin()\r\n    }, 3000)\r\n  })()\r\n\r\n  const onFocus = ()=>{\r\n    dispatch(onError(''))\r\n  }\r\n  \r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      dispatch(makeRegistration(values));\r\n      formik.resetForm();\r\n    },\r\n\r\n    validate: (values: userRegType) => {\r\n      const errors: FormikErrorType = {};\r\n      if (!values.email) {\r\n        errors.email = \"Email required\";\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n      ) {\r\n        errors.email = \"Invalid email address\";\r\n      }\r\n      if (!values.password) {\r\n        errors.email = \"Password required\";\r\n      } else if (values.password.length < 8) {\r\n        errors.password = \"Password must be at least 8 characters\";\r\n      }\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Register}>\r\n      <h2>Register</h2>\r\n\r\n      <form className={classes.registerForm}>\r\n        {registerStatuses.loading ? (\r\n          <Preloader />\r\n        ) : (\r\n          <>\r\n            <Input\r\n              type=\"email\"\r\n              error={formik.errors.email}\r\n              touched={formik.touched.email}\r\n              {...formik.getFieldProps(\"email\")}\r\n              onBlur={formik.handleBlur}\r\n              onFocus={onFocus}\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              error={formik.errors.password}\r\n              {...formik.getFieldProps(\"password\")}\r\n              touched={formik.touched.password}\r\n              onBlur={formik.handleBlur}\r\n              onFocus={onFocus}\r\n            />\r\n          </>\r\n        )}\r\n        <Message\r\n          message={registerStatuses.error || registerStatuses.user}\r\n          type={type}\r\n        />\r\n        <div className={classes.Btns}>\r\n          <SuperButton\r\n            type={\"submit\"}\r\n            onClick={() => formik.handleSubmit()}\r\n            disabled={registerStatuses.loading}\r\n          >\r\n            Register\r\n          </SuperButton>\r\n          <SuperButton onClick={redirectToLogin} color=\"blue\">\r\n            Login\r\n          </SuperButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Register;\r\n\r\n","import classes from \"./span.module.css\";\nimport React, { DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState } from \"react\";\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const { children, onDoubleClick, className, ...restSpanProps } = spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(false); // выключить editMode при нажатии Enter\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true); // включить editMode при двойном клике\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `badge badge-pill badge-warning ${classes.Span}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","import classes from \"./select.module.css\";\nimport React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: Array<string>\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange,\n        onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions=  options?.map((el, i) => {\n        if (el) {\n            return (\n                <option key={el + i} value={el}>\n                    {el}\n                </option>\n            )\n        }\n        \n    }); // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value) // onChange, onChangeOption\n        \n    }\n\n    return (\n        <>\n        \n            <div className={classes.SelectBox}>\n            <label htmlFor='options' className={classes.SelectLabel}>Choose an option</label>\n            <select onChange={onChangeCallback} {...restProps} name='options' className={classes.Select}>\n            {mappedOptions}\n        </select>    \n        </div>\n\n        </>\n    );\n}\n\nexport default SuperSelect;  \n","import classes from \"./radio.module.css\";\r\nimport React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\n\r\nexport interface IRadio {\r\n  name?: string;\r\n  value?: string;\r\n  checked?: boolean;\r\n  isChosen?: boolean;\r\n}\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: Array<IRadio>\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = ({type, name,options, value, onChange, onChangeOption,\r\n  ...restProps}) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n       onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n    const mappedOptions: any[] = options? options.map((o,i) => (\r\n          <label key={name + \"-\" + i} className={classes.RadioLabel}>\r\n            <input\r\n              type={\"radio\"}\r\n              checked={o.checked}\r\n              name={o.name}\r\n              value={o.name}\r\n              onChange={onChangeCallback}\r\n              // name, checked, value, onChange\r\n            />\r\n            <span>{o.name}</span>\r\n          </label>\r\n        ))\r\n      : [];\r\n\r\n    return (\r\n        <div style={{display: 'flex', width: '390px', justifyContent:'space-between'}}>\r\n            {mappedOptions}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperRange.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n    disabled?: boolean\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className,\n        disabled,\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e); // сохраняем старую функциональность\n        onChangeRange && onChangeRange(+e.currentTarget.value);\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\n\n    return (\n        <>\n            <input\n                disabled= {disabled}\n                style={{width: '500px'}}\n                type={\"range\"}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </>\n    );\n}\n\nexport default SuperRange;\n","import { makeStyles, Slider } from \"@material-ui/core\";\nimport React from \"react\";\n\n\ntype SuperDoubleRangePropsType = {\n    onChangeRange?: (value: number[]) => void\n    value?: [number, number]\n    disabled: boolean\n    // min, max, step, disable, ...\n}\n\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = ({ onChangeRange, value, disabled\n    // min, max, step, disable, ...\n}\n) => {\n    // сделать самому, можно подключать библиотеки\n\n    const handleChange = (event: any, newValue: number | number[]) => {\n        onChangeRange && onChangeRange(newValue as number[]);\n    };\n    const useStyles = makeStyles({\n        root: {\n            width: 500,\n            padding: '20px'\n        },\n    })\n    const classes = useStyles()\n    return (\n      <div className={classes.root}>\n        <Slider\n          color=\"secondary\"\n          value={value}\n          onChange={handleChange}\n          valueLabelDisplay=\"auto\"\n          aria-labelledby=\"range-slider\"\n          disabled={disabled}\n        />\n      </div>\n    );\n}\n\nexport default SuperDoubleRange;\n","import React, { useState } from \"react\";\r\nimport Input from \"./c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"./c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"./c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"./c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio, { IRadio } from \"./c6-SuperRadio/SuperRadio\";\r\nimport SuperRange from \"./c7-SuperRange/SuperRange\";\r\nimport SuperDoubleRange from \"./c8-SuperDoubleRange/SuperDoubleRange\";\r\nimport classes from \"./testComponents.module.scss\";\r\n\r\nconst arr = [\"x\", \"y\", \"z\"];\r\n  const radioArr = [{ name: 'x', checked: false }, { name: 'y', checked: false }, { name: 'z', checked: false }]\r\nconst TestComponents = () => {\r\n  const [value, setValue] = useState<string>(\"\");\r\n  const [val, onChangeOption] = useState(arr[1]);\r\n  const [radioOpt, setRadioOpt] = useState<Array<IRadio>>(radioArr);\r\n  const [value1, setValue1] = useState(0);\r\n      const [value2, setValue2] = useState(100);\r\n      let disabled = value1 >= value2;\r\n\r\n\r\n      const valueHandler = (val: number) => {\r\n       \r\n        setValue1(val);\r\n       \r\n  };\r\n      const doubleValueHandler = (val: number[]) => {\r\n        let val1 = val[0];\r\n        let val2 = val[1];\r\n        if (val1 >= val2) {\r\n          return;\r\n        }\r\n        setValue1(val1);\r\n        setValue2(val2);\r\n      };\r\n      const onChangeRadio = (value: string) => {\r\n        let checkedRadio = radioOpt.map((el) => {\r\n          if (el.name === value) {\r\n            return { ...el, checked: true };\r\n          } else return { ...el, checked: false };\r\n        });\r\n        setRadioOpt(checkedRadio);\r\n      };\r\n  return (\r\n    <div className={classes.TestComponents}>\r\n      <Input />\r\n      <SuperButton>Press</SuperButton>\r\n      <SuperCheckbox>Check it</SuperCheckbox>\r\n      <SuperEditableSpan\r\n        value={value}\r\n        onChangeText={setValue}\r\n        spanProps={{ children: value ? undefined : \"enter text...\" }}\r\n      />\r\n      <SuperSelect options={arr} value={val} onChangeOption={onChangeOption} />\r\n\r\n      <SuperRadio\r\n        name={\"radio\"}\r\n        options={radioOpt}\r\n        onChangeOption={onChangeRadio}\r\n      />\r\n      <SuperRange onChangeRange={valueHandler} value={value1} />\r\n      <SuperDoubleRange\r\n        value={[value1, value2]}\r\n        onChangeRange={doubleValueHandler}\r\n        disabled={disabled}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default TestComponents","import React from 'react'\r\nimport classes from './error.module.scss'\r\n\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div className={classes.Error}>\r\n      Error 404\r\n    </div>\r\n  )\r\n}\r\nexport default Error","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './nav.module.scss'\r\n\r\nconst Nav = () => {\r\n  const routeList = [\r\n    { to: \"/\", name: \"profile\" },\r\n    { to: \"/register\", name: \"register\" },\r\n    { to: \"/login\", name: \"login\" },\r\n    { to: \"/passRecover\", name: \"recover password\" },\r\n    { to: \"/test\", name: \"test\" },\r\n  ].map(({ to, name }) => {\r\n    return (\r\n      <li key={name}>\r\n        <NavLink to={to} className={classes.RouteLink}>\r\n          {name}\r\n        </NavLink>\r\n      </li>\r\n    );\r\n  })\r\n\r\n  return (\r\n    <ul className = {classes.Nav}>\r\n      {routeList}\r\n    </ul>\r\n  )\r\n}\r\nexport default Nav","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport Login from './components/login/login';\r\nimport NewPass from './components/newPass/newPass';\r\nimport PassRecover from './components/passRecower/recover';\r\nimport Profile from './components/profile/profile';\r\nimport Register from './components/register/register';\r\nimport TestComponents from './components/testComponents/testComponents';\r\nimport Error from './components/error/error'\r\nimport Nav from './components/navigation/nav';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n      <Switch>\r\n        <Route exact path={\"/\"} render={() => <Profile />} />\r\n        <Route exact path={\"/login\"} render={() => <Login />} />\r\n        <Route exact path={\"/register\"} render={() => <Register />} />\r\n        <Route exact path={\"/test\"} render={() => <TestComponents />} />\r\n        <Route path={\"/NewPass/:token\"} render={() => <NewPass />} />\r\n        <Route exact path={\"/passRecover\"} render={() => <PassRecover />} />\r\n        <Route path={\"*\"} render={() => <Error />} />\r\n        <Redirect from={\"*\"} to={\"/404\"} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { RegisterType } from \"../actions/register\";\r\nimport { GET_REGISTRATION_ERROR, REGISTER_NEW_USER, SET_LOADING } from \"../types\";\r\n\r\nexport type RegisterStateType = typeof initState;\r\nconst initState = {\r\n  loading: false,\r\n  error: '',\r\n  user: ''\r\n};\r\n\r\nexport const registerReducer = (state: RegisterStateType = initState,action: RegisterType): RegisterStateType => {\r\n  switch (action.type) {\r\n    case REGISTER_NEW_USER: \r\n      return { ...state, loading: false, error: '', user: action.user }\r\n    case GET_REGISTRATION_ERROR:\r\n      return { ...state, loading: false, error: action.error, user: '' }\r\n    case SET_LOADING:\r\n      return{...state, loading:true}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { profileReducer } from \"./reducers/profile\";\r\nimport { registerReducer } from \"./reducers/register\";\r\nimport {passwordReducer} from './reducers/password';\r\nconst reducers = combineReducers({\r\n  register: registerReducer,\r\n  profile: profileReducer,\r\n  password: passwordReducer\r\n});\r\n\r\n\r\ntype rootReducerType = typeof reducers\r\nexport type RootStateType = ReturnType<rootReducerType>\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\n// @ts-ignore\r\nwindow.store = store;\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"login_Login__3jIq-\",\"Loginform\":\"login_Loginform__3feNI\",\"BtnWrapper\":\"login_BtnWrapper__3AvOc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__19Lxl\",\"errorInput\":\"SuperInputText_errorInput__2GFWv\",\"error\":\"SuperInputText_error__3VApw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3UPxI\",\"click-wave\":\"SuperCheckbox_click-wave__1JaFw\",\"spanClassName\":\"SuperCheckbox_spanClassName__kUCUS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PassRecover\":\"passRecover_PassRecover__1FtlO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Register\":\"register_Register__83p-8\",\"registerForm\":\"register_registerForm__D6_FP\",\"Btns\":\"register_Btns__2VhGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectBox\":\"select_SelectBox__LC3b2\",\"SelectLabel\":\"select_SelectLabel__1NK_N\",\"S\":\"select_S__2r5Aa\",\"SelectElement\":\"select_SelectElement__3lnH_\",\"AnimationName\":\"select_AnimationName__2cJwu\",\"chosen\":\"select_chosen__1MGbV\",\"ownSelect\":\"select_ownSelect__3V3yp select_SelectElement__3lnH_\",\"MyActive\":\"select_MyActive__1CzmW\",\"anim\":\"select_anim__32VyF\",\"MyDone\":\"select_MyDone__ZH7_P\",\"MyExitActive\":\"select_MyExitActive__1z-wk\",\"MyExitDone\":\"select_MyExitDone__h3jFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"message_Message__23eo-\",\"error\":\"message_error__jxt0X\",\"success\":\"message_success__2ShDs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"SuperButton_Btn__3DrOw\",\"blue\":\"SuperButton_blue__1YYR0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewPass\":\"newPass_NewPass__9f8g0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"nav_Nav__2Uw7N\",\"RouteLink\":\"nav_RouteLink__11f8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"profile_Profile__zjy0j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Span\":\"span_Span__2lHTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RadioLabel\":\"radio_RadioLabel__31Ff_ select_SelectLabel__1NK_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2bD43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TestComponents\":\"testComponents_TestComponents__1VZla\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"error_Error__1tclE\"};"],"sourceRoot":""}