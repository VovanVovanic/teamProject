{"version":3,"sources":["components/testComponents/c1-SuperInputText/SuperInputText.module.css","components/testComponents/c3-SuperCheckbox/SuperCheckbox.module.css","components/testComponents/c5-SuperSelect/select.module.css","components/testComponents/c2-SuperButton/SuperButton.module.css","components/navigation/nav.module.scss","components/login/login.module.scss","components/newPass/newPass.module.scss","components/passRecower/passRecover.module.scss","components/profile/profile.module.scss","components/register/register.module.scss","components/testComponents/c4-SuperEditableSpan/span.module.css","components/testComponents/c6-SuperRadio/radio.module.css","components/testComponents/c7-SuperRange/SuperRange.module.css","components/testComponents/testComponents.module.scss","components/error/error.module.scss","components/login/login.tsx","components/newPass/newPass.tsx","components/passRecower/recover.tsx","components/profile/profile.tsx","components/register/register.tsx","components/testComponents/c1-SuperInputText/SuperInputText.tsx","components/testComponents/c2-SuperButton/SuperButton.tsx","components/testComponents/c3-SuperCheckbox/SuperCheckbox.tsx","components/testComponents/c4-SuperEditableSpan/SuperEditableSpan.tsx","components/testComponents/c5-SuperSelect/SuperSelect.tsx","components/testComponents/c6-SuperRadio/SuperRadio.tsx","components/testComponents/c7-SuperRange/SuperRange.tsx","components/testComponents/c8-SuperDoubleRange/SuperDoubleRange.tsx","components/testComponents/testComponents.tsx","components/error/error.tsx","components/navigation/nav.tsx","App.tsx","reportWebVitals.ts","redux/reducers/login.tsx","redux/reducers/profile.ts","redux/reducers/register.tsx","redux/store.ts","index.tsx"],"names":["module","exports","Login","className","classes","NewPass","PassRecover","Profile","Register","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","e","currentTarget","value","key","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","Span","SuperSelect","options","onChangeOption","mappedOptions","map","el","i","SelectBox","htmlFor","SelectLabel","name","Select","SuperRadio","onChangeCallback","o","RadioLabel","style","display","width","justifyContent","SuperRange","onChangeRange","disabled","finalRangeClassName","range","SuperDoubleRange","makeStyles","root","padding","useStyles","Slider","color","event","newValue","valueLabelDisplay","aria-labelledby","arr","radioArr","TestComponents","setValue","val","radioOpt","setRadioOpt","value1","setValue1","value2","setValue2","undefined","checkedRadio","val1","val2","Error","Nav","routeList","to","RouteLink","App","exact","path","render","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","login","password","lastName","reducers","combineReducers","state","action","register","profile","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78d0c88e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__19Lxl\",\"errorInput\":\"SuperInputText_errorInput__2GFWv\",\"error\":\"SuperInputText_error__3VApw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3UPxI\",\"click-wave\":\"SuperCheckbox_click-wave__1JaFw\",\"spanClassName\":\"SuperCheckbox_spanClassName__kUCUS\",\"label\":\"SuperCheckbox_label__wQfux\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectBox\":\"select_SelectBox__LC3b2\",\"SelectLabel\":\"select_SelectLabel__1NK_N\",\"S\":\"select_S__2r5Aa\",\"SelectElement\":\"select_SelectElement__3lnH_\",\"AnimationName\":\"select_AnimationName__2cJwu\",\"chosen\":\"select_chosen__1MGbV\",\"ownSelect\":\"select_ownSelect__3V3yp select_SelectElement__3lnH_\",\"MyActive\":\"select_MyActive__1CzmW\",\"anim\":\"select_anim__32VyF\",\"MyDone\":\"select_MyDone__ZH7_P\",\"MyExitActive\":\"select_MyExitActive__1z-wk\",\"MyExitDone\":\"select_MyExitDone__h3jFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"SuperButton_red__1JrjT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"nav_Nav__2Uw7N\",\"RouteLink\":\"nav_RouteLink__11f8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"login_Login__3jIq-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewPass\":\"newPass_NewPass__9f8g0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PassRecover\":\"passRecover_PassRecover__1FtlO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"profile_Profile__zjy0j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Register\":\"register_Register__83p-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Span\":\"span_Span__2lHTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RadioLabel\":\"radio_RadioLabel__31Ff_ select_SelectLabel__1NK_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2bD43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TestComponents\":\"testComponents_TestComponents__1VZla\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"error_Error__1tclE\"};","import React from \"react\";\r\nimport classes from \"./login.module.scss\";\r\n\r\nconst Login = () => {\r\n  return <div className={classes.Login}>Login</div>;\r\n};\r\nexport default Login;\r\n","import React from \"react\";\r\nimport classes from \"./newPass.module.scss\";\r\n\r\nconst NewPass = () => {\r\n  return <div className={classes.NewPass}>NewPass</div>;\r\n};\r\nexport default NewPass;\r\n","import React from 'react'\r\nimport classes from './passRecover.module.scss'\r\n\r\n\r\nconst PassRecover = () => {\r\n  return (\r\n    <div className={classes.PassRecover}>\r\n     Recover\r\n    </div>\r\n  )\r\n}\r\nexport default PassRecover","import React from \"react\";\r\nimport classes from \"./profile.module.scss\";\r\n\r\nconst Profile = () => {\r\n  return <div className={classes.Profile}>Profile</div>;\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport classes from \"./register.module.scss\";\r\n\r\nconst Register = () => {\r\n  return <div className={classes.Register}>Register</div>;\r\n};\r\nexport default Register;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = error ? s.errorInput : '' // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={`${s.superInput} ${finalInputClassName}`}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n    \n         \n    \n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        /> \n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n  onChangeChecked?: (checked: boolean) => void;\n  spanClassName?: string;\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (onChangeChecked) {\n          onChangeChecked(e.currentTarget.checked);\n        }\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n      \n        <label className={s.label}>\n          <input\n            type={\"checkbox\"}\n            onChange={onChangeCallback}\n            className={finalInputClassName}\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n          />\n          {children && <span className={s.spanClassName}>{children}</span>}\n        </label>\n      // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import classes from \"./span.module.css\";\nimport React, { DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState } from \"react\";\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const { children, onDoubleClick, className, ...restSpanProps } = spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(false); // выключить editMode при нажатии Enter\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true); // включить editMode при двойном клике\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `badge badge-pill badge-warning ${classes.Span}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","import classes from \"./select.module.css\";\nimport React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: Array<string>\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange,\n        onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions=  options?.map((el, i) => {\n        if (el) {\n            return (\n                <option key={el + i} value={el}>\n                    {el}\n                </option>\n            )\n        }\n        \n    }); // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value) // onChange, onChangeOption\n        \n    }\n\n    return (\n        <>\n        \n            <div className={classes.SelectBox}>\n            <label htmlFor='options' className={classes.SelectLabel}>Choose an option</label>\n            <select onChange={onChangeCallback} {...restProps} name='options' className={classes.Select}>\n            {mappedOptions}\n        </select>    \n        </div>\n\n        </>\n    );\n}\n\nexport default SuperSelect;  \n","import classes from \"./radio.module.css\";\nimport React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\n\nexport interface IRadio {\n  name?: string;\n  value?: string;\n  checked?: boolean;\n  isChosen?: boolean;\n}\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: Array<IRadio>\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = ({type, name,options, value, onChange, onChangeOption,\n  ...restProps}) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n       onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n    const mappedOptions: any[] = options? options.map((o,i) => (\n          <label key={name + \"-\" + i} className={classes.RadioLabel}>\n            <input\n              type={\"radio\"}\n              checked={o.checked}\n              name={o.name}\n              value={o.name}\n              onChange={onChangeCallback}\n              // name, checked, value, onChange\n            />\n            <span>{o.name}</span>\n          </label>\n        ))\n      : [];\n\n    return (\n        <div style={{display: 'flex', width: '400px', justifyContent:'space-between'}}>\n            {mappedOptions}\n        </div>\n    );\n}\n\nexport default SuperRadio;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperRange.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n    disabled?: boolean\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className,\n        disabled,\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e); // сохраняем старую функциональность\n        onChangeRange && onChangeRange(+e.currentTarget.value);\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\n\n    return (\n        <>\n            <input\n                disabled= {disabled}\n                style={{width: '500px'}}\n                type={\"range\"}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </>\n    );\n}\n\nexport default SuperRange;\n","import { makeStyles, Slider } from \"@material-ui/core\";\nimport React from \"react\";\n\n\ntype SuperDoubleRangePropsType = {\n    onChangeRange?: (value: number[]) => void\n    value?: [number, number]\n    disabled: boolean\n    // min, max, step, disable, ...\n}\n\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = ({ onChangeRange, value, disabled\n    // min, max, step, disable, ...\n}\n) => {\n    // сделать самому, можно подключать библиотеки\n\n    const handleChange = (event: any, newValue: number | number[]) => {\n        onChangeRange && onChangeRange(newValue as number[]);\n    };\n    const useStyles = makeStyles({\n        root: {\n            width: 500,\n            padding: '20px'\n        },\n    })\n    const classes = useStyles()\n    return (\n      <div className={classes.root}>\n        <Slider\n          color=\"secondary\"\n          value={value}\n          onChange={handleChange}\n          valueLabelDisplay=\"auto\"\n          aria-labelledby=\"range-slider\"\n          disabled={disabled}\n        />\n      </div>\n    );\n}\n\nexport default SuperDoubleRange;\n","import React, { useState } from \"react\";\r\nimport SuperInputText from \"./c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"./c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"./c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"./c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio, { IRadio } from \"./c6-SuperRadio/SuperRadio\";\r\nimport SuperRange from \"./c7-SuperRange/SuperRange\";\r\nimport SuperDoubleRange from \"./c8-SuperDoubleRange/SuperDoubleRange\";\r\nimport classes from \"./testComponents.module.scss\";\r\n\r\nconst arr = [\"x\", \"y\", \"z\"];\r\n  const radioArr = [{ name: 'x', checked: false }, { name: 'y', checked: false }, { name: 'z', checked: false }]\r\nconst TestComponents = () => {\r\n  const [value, setValue] = useState<string>(\"\");\r\n  const [val, onChangeOption] = useState(arr[1]);\r\n  const [radioOpt, setRadioOpt] = useState<Array<IRadio>>(radioArr);\r\n  const [value1, setValue1] = useState(0);\r\n      const [value2, setValue2] = useState(100);\r\n      let disabled = value1 >= value2;\r\n\r\n\r\n      const valueHandler = (val: number) => {\r\n       \r\n        setValue1(val);\r\n       \r\n  };\r\n      const doubleValueHandler = (val: number[]) => {\r\n        let val1 = val[0];\r\n        let val2 = val[1];\r\n        if (val1 >= val2) {\r\n          return;\r\n        }\r\n        setValue1(val1);\r\n        setValue2(val2);\r\n      };\r\n      const onChangeRadio = (value: string) => {\r\n        let checkedRadio = radioOpt.map((el) => {\r\n          if (el.name === value) {\r\n            return { ...el, checked: true };\r\n          } else return { ...el, checked: false };\r\n        });\r\n        setRadioOpt(checkedRadio);\r\n      };\r\n  return (\r\n    <div className={classes.TestComponents}>\r\n      <SuperInputText />\r\n      <SuperButton red>Press</SuperButton>\r\n      <SuperCheckbox>Check it</SuperCheckbox>\r\n      <SuperEditableSpan\r\n        value={value}\r\n        onChangeText={setValue}\r\n        spanProps={{ children: value ? undefined : \"enter text...\" }}\r\n      />\r\n      <SuperSelect options={arr} value={val} onChangeOption={onChangeOption} />\r\n\r\n      <SuperRadio\r\n        name={\"radio\"}\r\n        options={radioOpt}\r\n        onChangeOption={onChangeRadio}\r\n      />\r\n      <SuperRange onChangeRange={valueHandler} value={value1} />\r\n      <SuperDoubleRange\r\n        value={[value1, value2]}\r\n        onChangeRange={doubleValueHandler}\r\n        disabled={disabled}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default TestComponents","import React from 'react'\r\nimport classes from './error.module.scss'\r\n\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div className={classes.Error}>\r\n      Error 404\r\n    </div>\r\n  )\r\n}\r\nexport default Error","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './nav.module.scss'\r\n\r\nconst Nav = () => {\r\n  const routeList = [\r\n    { to: \"/\", name: \"register\" },\r\n    { to: \"/profile\", name: \"home\" },\r\n    { to: \"/login\", name: \"login\" },\r\n    { to: \"/passRecover\", name: \"recover password\" },\r\n    { to: \"/test\", name: \"test\" },\r\n    { to: \"/NewPass\", name: \"NewPass\" },\r\n  ].map(({ to, name }) => {\r\n    return (\r\n      <li key={name}>\r\n        <NavLink to={to} className={classes.RouteLink}>\r\n          {name}\r\n        </NavLink>\r\n      </li>\r\n    );\r\n  })\r\n\r\n  return (\r\n    <ul className = {classes.Nav}>\r\n      {routeList}\r\n    </ul>\r\n  )\r\n}\r\nexport default Nav","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport Login from './components/login/login';\nimport NewPass from './components/newPass/newPass';\nimport PassRecover from './components/passRecower/recover';\nimport Profile from './components/profile/profile';\nimport Register from './components/register/register';\nimport TestComponents from './components/testComponents/testComponents';\nimport Error from './components/error/error'\nimport Nav from './components/navigation/nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Switch>\n        <Route exact path={\"/\"} render={() => <Register />} />\n        <Route exact path={\"/login\"} render={() => <Login />} />\n        <Route exact path={\"/profile\"} render={() => <Profile />} />\n        <Route exact path={\"/test\"} render={() => <TestComponents />} />\n        <Route exact path={\"/NewPass\"} render={() => <NewPass />} />\n        <Route exact path={\"/passRecover\"} render={() => <PassRecover />} />\n        <Route path={\"*\"} render={() => <Error />} />\n        <Redirect from={\"*\"} to={\"/404\"} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","type LoginStateType = typeof initState\r\nconst initState = {\r\n  login: '',\r\n  password: ''\r\n}\r\n\r\nexport const loginReducer = (state: LoginStateType = initState, action: any): LoginStateType => {\r\n  switch (action.type) {\r\n    default: return state\r\n  }\r\n}","type ProfileStateType = typeof initState\r\nconst initState = {\r\n\r\n}\r\n\r\nexport const profileReducer = (state: ProfileStateType = initState, action: any): ProfileStateType => {\r\n  switch (action.type) {\r\n    default: return state\r\n  }\r\n}","type RegisterStateType = typeof initState;\r\nconst initState = {\r\n  login: \"\",\r\n  password: \"\",\r\n  name: '',\r\n  lastName: ''\r\n};\r\n\r\nexport const registerReducer = (state: RegisterStateType = initState,action: any): RegisterStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { loginReducer } from \"./reducers/login\";\r\nimport { profileReducer } from \"./reducers/profile\";\r\nimport { registerReducer } from \"./reducers/register\";\r\nconst reducers = combineReducers({\r\n  login: loginReducer,\r\n  register: registerReducer,\r\n  profile: profileReducer,\r\n});\r\n\r\n\r\ntype rootReducerType = typeof reducers\r\nexport type RootStateType = ReturnType<rootReducerType>\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\n// @ts-ignore\r\nwindow.store = store;\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}