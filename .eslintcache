[{"C:\\projects\\teamProject\\src\\index.tsx":"1","C:\\projects\\teamProject\\src\\reportWebVitals.ts":"2","C:\\projects\\teamProject\\src\\redux\\store.ts":"3","C:\\projects\\teamProject\\src\\App.tsx":"4","C:\\projects\\teamProject\\src\\redux\\reducers\\password.ts":"5","C:\\projects\\teamProject\\src\\redux\\reducers\\register.ts":"6","C:\\projects\\teamProject\\src\\redux\\reducers\\profile.ts":"7","C:\\projects\\teamProject\\src\\components\\newPass\\newPass.tsx":"8","C:\\projects\\teamProject\\src\\components\\profile\\profile.tsx":"9","C:\\projects\\teamProject\\src\\components\\passRecower\\recover.tsx":"10","C:\\projects\\teamProject\\src\\components\\error\\error.tsx":"11","C:\\projects\\teamProject\\src\\components\\testComponents\\testComponents.tsx":"12","C:\\projects\\teamProject\\src\\components\\navigation\\nav.tsx":"13","C:\\projects\\teamProject\\src\\components\\login\\login.tsx":"14","C:\\projects\\teamProject\\src\\components\\register\\register.tsx":"15","C:\\projects\\teamProject\\src\\components\\api\\passwordAPI.ts":"16","C:\\projects\\teamProject\\src\\redux\\types.ts":"17","C:\\projects\\teamProject\\src\\api\\api.ts":"18","C:\\projects\\teamProject\\src\\components\\testComponents\\c2-SuperButton\\SuperButton.tsx":"19","C:\\projects\\teamProject\\src\\components\\preloader\\spinner.tsx":"20","C:\\projects\\teamProject\\src\\components\\testComponents\\c5-SuperSelect\\SuperSelect.tsx":"21","C:\\projects\\teamProject\\src\\components\\testComponents\\c4-SuperEditableSpan\\SuperEditableSpan.tsx":"22","C:\\projects\\teamProject\\src\\components\\testComponents\\c3-SuperCheckbox\\SuperCheckbox.tsx":"23","C:\\projects\\teamProject\\src\\components\\testComponents\\c6-SuperRadio\\SuperRadio.tsx":"24","C:\\projects\\teamProject\\src\\components\\testComponents\\c7-SuperRange\\SuperRange.tsx":"25","C:\\projects\\teamProject\\src\\components\\testComponents\\c8-SuperDoubleRange\\SuperDoubleRange.tsx":"26","C:\\projects\\teamProject\\src\\redux\\actions\\register.ts":"27","C:\\projects\\teamProject\\src\\components\\testComponents\\c1-SuperInputText\\SuperInputText.tsx":"28","C:\\projects\\teamProject\\src\\components\\message\\message.tsx":"29"},{"size":736,"mtime":1612685993591,"results":"30","hashOfConfig":"31"},{"size":440,"mtime":1612685993595,"results":"32","hashOfConfig":"31"},{"size":618,"mtime":1612799944029,"results":"33","hashOfConfig":"31"},{"size":1224,"mtime":1612787348747,"results":"34","hashOfConfig":"31"},{"size":2939,"mtime":1612787348761,"results":"35","hashOfConfig":"31"},{"size":720,"mtime":1612787504208,"results":"36","hashOfConfig":"31"},{"size":2807,"mtime":1612989015566,"results":"37","hashOfConfig":"31"},{"size":2359,"mtime":1612787348749,"results":"38","hashOfConfig":"31"},{"size":463,"mtime":1612990025508,"results":"39","hashOfConfig":"31"},{"size":3370,"mtime":1612787348751,"results":"40","hashOfConfig":"31"},{"size":203,"mtime":1612685993563,"results":"41","hashOfConfig":"31"},{"size":2494,"mtime":1612787348759,"results":"42","hashOfConfig":"31"},{"size":698,"mtime":1612685993566,"results":"43","hashOfConfig":"31"},{"size":3418,"mtime":1612990148937,"results":"44","hashOfConfig":"31"},{"size":3499,"mtime":1612787504203,"results":"45","hashOfConfig":"31"},{"size":867,"mtime":1612787348748,"results":"46","hashOfConfig":"31"},{"size":190,"mtime":1612787504209,"results":"47","hashOfConfig":"31"},{"size":1103,"mtime":1612800549414,"results":"48","hashOfConfig":"31"},{"size":948,"mtime":1612787348758,"results":"49","hashOfConfig":"31"},{"size":313,"mtime":1612685993570,"results":"50","hashOfConfig":"31"},{"size":1404,"mtime":1612685993585,"results":"51","hashOfConfig":"31"},{"size":3446,"mtime":1612685993582,"results":"52","hashOfConfig":"31"},{"size":1956,"mtime":1612685993581,"results":"53","hashOfConfig":"31"},{"size":1414,"mtime":1612685993586,"results":"54","hashOfConfig":"31"},{"size":1980,"mtime":1612685993588,"results":"55","hashOfConfig":"31"},{"size":1148,"mtime":1612685993589,"results":"56","hashOfConfig":"31"},{"size":1050,"mtime":1612787504206,"results":"57","hashOfConfig":"31"},{"size":1620,"mtime":1612787504205,"results":"58","hashOfConfig":"31"},{"size":324,"mtime":1612787504201,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1u2dvsx",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\projects\\teamProject\\src\\index.tsx",[],["122","123"],"C:\\projects\\teamProject\\src\\reportWebVitals.ts",[],"C:\\projects\\teamProject\\src\\redux\\store.ts",[],"C:\\projects\\teamProject\\src\\App.tsx",[],"C:\\projects\\teamProject\\src\\redux\\reducers\\password.ts",[],"C:\\projects\\teamProject\\src\\redux\\reducers\\register.ts",[],"C:\\projects\\teamProject\\src\\redux\\reducers\\profile.ts",[],"C:\\projects\\teamProject\\src\\components\\newPass\\newPass.tsx",[],"C:\\projects\\teamProject\\src\\components\\profile\\profile.tsx",[],"C:\\projects\\teamProject\\src\\components\\passRecower\\recover.tsx",[],"C:\\projects\\teamProject\\src\\components\\error\\error.tsx",[],"C:\\projects\\teamProject\\src\\components\\testComponents\\testComponents.tsx",[],"C:\\projects\\teamProject\\src\\components\\navigation\\nav.tsx",[],"C:\\projects\\teamProject\\src\\components\\login\\login.tsx",[],"C:\\projects\\teamProject\\src\\components\\register\\register.tsx",["124"],"import { useFormik } from \"formik\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {userRegType} from \"../../api/api\";\r\nimport { makeRegistration, onError } from \"../../redux/actions/register\";\r\nimport { RegisterStateType } from \"../../redux/reducers/register\";\r\nimport { RootStateType } from \"../../redux/store\";\r\nimport Message from \"../message/message\";\r\nimport Preloader from \"../preloader/spinner\";\r\nimport Input from \"../testComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../testComponents/c2-SuperButton/SuperButton\";\r\nimport classes from \"./register.module.scss\";\r\n\r\ntype FormikErrorType = {\r\n   email?: string\r\n   password?: string\r\n}\r\n\r\n\r\nconst Register = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const registerStatuses = useSelector<RootStateType, RegisterStateType>((state) => state.register);\r\n\r\n\r\n\r\n  let type = ''\r\n  if(registerStatuses.user){type = 'success'}\r\n  if (registerStatuses.error) { type = 'error' }\r\n  \r\n  const  redirectToLogin = () => {\r\n    history.push(`/login`);\r\n  };\r\n  \r\n  registerStatuses.user && (()=> {\r\n    setTimeout(() => {\r\n      redirectToLogin()\r\n    }, 3000)\r\n  })()\r\n\r\n  const onFocus = ()=>{\r\n    dispatch(onError(''))\r\n  }\r\n  \r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      dispatch(makeRegistration(values));\r\n      formik.resetForm();\r\n    },\r\n\r\n    validate: (values: userRegType) => {\r\n      const errors: FormikErrorType = {};\r\n      if (!values.email) {\r\n        errors.email = \"Email required\";\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n      ) {\r\n        errors.email = \"Invalid email address\";\r\n      }\r\n      if (!values.password) {\r\n        errors.email = \"Password required\";\r\n      } else if (values.password.length < 8) {\r\n        errors.password = \"Password must be at least 8 characters\";\r\n      }\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Register}>\r\n      <h2>Register</h2>\r\n\r\n      <form className={classes.registerForm}>\r\n        {registerStatuses.loading ? (\r\n          <Preloader />\r\n        ) : (\r\n          <>\r\n            <Input\r\n              type=\"email\"\r\n              error={formik.errors.email}\r\n              touched={formik.touched.email}\r\n              {...formik.getFieldProps(\"email\")}\r\n                onBlur={formik.handleBlur}\r\n                onFocus={onFocus}\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              error={formik.errors.password}\r\n              {...formik.getFieldProps(\"password\")}\r\n              touched={formik.touched.password}\r\n                onBlur={formik.handleBlur}\r\n                onFocus={onFocus}\r\n            />\r\n          </>\r\n        )}\r\n        <Message\r\n          message={registerStatuses.error || registerStatuses.user}\r\n          type={type}\r\n        />\r\n        <div className={classes.Btns}>\r\n          <SuperButton\r\n            type={\"submit\"}\r\n            onClick={() => formik.handleSubmit()}\r\n            disabled={registerStatuses.loading}\r\n          >\r\n            Register\r\n          </SuperButton>\r\n          <SuperButton onClick={redirectToLogin} color=\"blue\">\r\n            Login\r\n          </SuperButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Register;\r\n\r\n","C:\\projects\\teamProject\\src\\components\\api\\passwordAPI.ts",[],"C:\\projects\\teamProject\\src\\redux\\types.ts",[],"C:\\projects\\teamProject\\src\\api\\api.ts",[],"C:\\projects\\teamProject\\src\\components\\testComponents\\c2-SuperButton\\SuperButton.tsx",["125"],"import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport classes from \"./SuperButton.module.css\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    color?: string\r\n    type?: string\r\n    onClick?:  ()=>void\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = ({ color, className, type, onClick,  ...restProps }) => {\r\n\r\n    const cls = [\r\n        classes.Btn\r\n    ]\r\n    color && cls.push(classes[color])\r\n\r\n    return (\r\n        <button\r\n            onClick = {onClick}\r\n            className={cls.join(' ')}\r\n            {...restProps} \r\n        /> \r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","C:\\projects\\teamProject\\src\\components\\preloader\\spinner.tsx",[],"C:\\projects\\teamProject\\src\\components\\testComponents\\c5-SuperSelect\\SuperSelect.tsx",["126"],"import classes from \"./select.module.css\";\r\nimport React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: Array<string>\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange,\r\n        onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions=  options?.map((el, i) => {\r\n        if (el) {\r\n            return (\r\n                <option key={el + i} value={el}>\r\n                    {el}\r\n                </option>\r\n            )\r\n        }\r\n        \r\n    }); // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption && onChangeOption(e.currentTarget.value) // onChange, onChangeOption\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n            <div className={classes.SelectBox}>\r\n            <label htmlFor='options' className={classes.SelectLabel}>Choose an option</label>\r\n            <select onChange={onChangeCallback} {...restProps} name='options' className={classes.Select}>\r\n            {mappedOptions}\r\n        </select>    \r\n        </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;  \r\n","C:\\projects\\teamProject\\src\\components\\testComponents\\c4-SuperEditableSpan\\SuperEditableSpan.tsx",[],"C:\\projects\\teamProject\\src\\components\\testComponents\\c3-SuperCheckbox\\SuperCheckbox.tsx",[],"C:\\projects\\teamProject\\src\\components\\testComponents\\c6-SuperRadio\\SuperRadio.tsx",[],"C:\\projects\\teamProject\\src\\components\\testComponents\\c7-SuperRange\\SuperRange.tsx",[],"C:\\projects\\teamProject\\src\\components\\testComponents\\c8-SuperDoubleRange\\SuperDoubleRange.tsx",[],"C:\\projects\\teamProject\\src\\redux\\actions\\register.ts",[],"C:\\projects\\teamProject\\src\\components\\testComponents\\c1-SuperInputText\\SuperInputText.tsx",[],"C:\\projects\\teamProject\\src\\components\\message\\message.tsx",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":2,"column":17,"nodeType":"133","messageId":"134","endLine":2,"endColumn":26},{"ruleId":"131","severity":1,"message":"135","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":9},{"ruleId":"136","severity":1,"message":"137","line":19,"column":48,"nodeType":"138","messageId":"139","endLine":19,"endColumn":50},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'s' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]